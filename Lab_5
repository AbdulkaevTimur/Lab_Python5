#Задана рекуррентная функция. Область определения функции – натуральные числа.
#Написать программу сравнительного вычисления данной функции рекурсивно и итерационно.
#Определить границы применимости рекурсивного и итерационного подхода.
#Вариант 1: F(1) = 2; G(1) = 1; F(n) = (-1)**n * ((n–1)! – G(n–1)), G(n) = F(n–1) + G(n–1), при n >=2
import sys
from functools import lru_cache
import timeit
sys.set_int_max_str_digits(1000000000)
sys.setrecursionlimit(1000000000)

G = 1
F = 2
n = 0

#Рекурсия
@lru_cache(maxsize=None)
def fact_recursion(n):
    if n == 1:
        return 1
    else:
        return n * fact_recursion(n - 1)

@lru_cache(maxsize=None)
def f_recursion(n):
    if n == 1:
        return 2
    else:
        return (-1)**n * (fact_recursion(n - 1) - g_recursion(n - 1))

@lru_cache(maxsize=None)
def g_recursion(n):
    if n == 1:
        return 1
    else:
        return f_recursion(n - 1) + g_recursion(n - 1)

@lru_cache(maxsize=None)
def fact_iteration(n):
    fact = 1
    for i in range(1, n + 1):
        fact *= i
    return fact

@lru_cache(maxsize=None)
def f_g_iteration(n):
    f, g = [2], [1]
    for i in range(2, n + 1):
        f.append((-1)**i * (fact_iteration(i - 1) - g[0]))
        g.append(f[0] + g[0])
        f.pop(0)
        g.pop(0)
    return f[0], g[0]

def clear():
    fact_iteration.cache_clear()
    fact_recursion.cache_clear()
    fact_recursion.cache_clear()
    f_recursion.cache_clear()
    g_recursion.cache_clear()
    f_g_iteration.cache_clear()

while n < 2:
    n = int(input('Введите число n >= 2: '))

F, G = f_g_iteration(n)
print('ИТЕРАЦИОННЫЙ МЕТОД:\n' + 'F(' + str(n) + ') = ' + str(F) + '\nG(' + str(n) + ') = ' + str(G))
print('РЕКУРСИВНЫЙ МЕТОД:\n' + 'F(' + str(n) + ') = ' + str(f_recursion(n)) + '\nG(' + str(n) + ') = ' + str(g_recursion(n)))

f_g_iteration_time = timeit.timeit(lambda: f_g_iteration(n), number=1000)
f_recursion_time = timeit.timeit(lambda: f_recursion(n), number=1000)
print(f"Время вычисления итерационным методом: {'{:.10f}'.format(f_g_iteration_time)} секунд")
print(f"Время вычисления рекурсивным методом:  {'{:.10f}'.format(f_recursion_time)} секунд")

clear()
